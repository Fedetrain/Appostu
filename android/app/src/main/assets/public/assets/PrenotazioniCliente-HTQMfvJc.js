import{S,b as O,a as k,r as N,T as B,U as L,V as $,i as q,q as F,w as P,W as M,h as V,X as H,n as D,d as y,p as i,s as l,u as t,I as A,v as R,x as d,t as U,y as Y,D as K,E as Q,F as W,B as X,C as Z,z as a,H as j,K as G,l as C,m as J,L as ee,N as oe,O as ne,P as s,Y as ae,Z as te,Q as ie,$ as le,a0 as se,a1 as re,_ as ce}from"./index-CCOiHjrE.js";const de={class:"div-title-icon"},ue={class:"contact-info"},ze={class:"contact-info"},ge={class:"info-item"},me={class:"info-item"},pe={class:"info-item"},fe={class:"info-item"},_e={class:"scritta-nessuno"},ve=S({__name:"PrenotazioniCliente",setup(De){var w;const h=O(),f=k(),_=(w=h.currentUser)==null?void 0:w.uid;console.log("uiddd",_);const z=N([]),g=N(!1),b=n=>{const e=new Date(n.toMillis());return"".concat(e.getDate(),"/").concat(e.getMonth()+1,"/").concat(e.getFullYear())},T=B(()=>z.value.length===0);async function E(n){try{const e=C(f,"Negozi",n),o=await J(e);if(o.exists()){const r=o.data();return console.log("Informazioni del negozio recuperate:",r),r}else return console.error("Nessun documento trovato per il negozio con ID:",n),null}catch(e){return console.error("Errore durante il recupero del nome del negozio:",e),null}}const x=async n=>{console.log("Tentativo di eliminazione della prenotazione:",n),await(await se.create({header:"Conferma eliminazione",message:"Sei sicuro di voler eliminare questa prenotazione?",buttons:[{text:"Annulla",role:"cancel",cssClass:"secondary",handler:()=>{console.log("Eliminazione annullata")}},{text:"Elimina",handler:async()=>{const o=new Date;console.log("Data e ora attuali:",o);const r=new Date(n.dataPrenotazione.toMillis());r.setHours(parseInt(n.oraInizio.split(":")[0]),parseInt(n.oraInizio.split(":")[1])),console.log("Ora di inizio della prenotazione:",r);const m=(r.getTime()-o.getTime())/(1e3*60*60);if(console.log("Differenza in ore tra ora attuale e ora di inizio prenotazione:",m),m>3){console.log("Differenza maggiore di 3 ore. Procedo con l'eliminazione.");try{await re(C(f,"Prenotazioni",n.idDocumentPrenotazione)),v("Prenotazione eliminata con successo"),console.log("Documento eliminato dal database:",n.idDocumentNegozio),await I()}catch(p){console.error("Errore durante l'eliminazione della prenotazione dal database:",p)}}else v("Non è possibile eliminare la prenotazione. Meno di 3 ore all'inizio del servizio."),console.log("Non è possibile eliminare la prenotazione. Meno di 3 ore all'inizio del servizio.")}}]})).present()};L(async()=>{if(g.value=!0,!_){console.error("UID non disponibile. L'utente potrebbe non essere autenticato."),g.value=!1;return}await I()});async function I(){try{console.log("Inizio recupero delle prenotazioni...");const n=new Date,e=$.fromDate(n);console.log("rimesi delle prenotazioni...",e);const o=q(f,"Prenotazioni"),r=F(o,P("idDocumentCliente","==",_),P("dataPrenotazione",">=",e),M("dataPrenotazione")),m=await V(r);z.value=await Promise.all(m.docs.map(async p=>{const c=p.data();c.idDocumentPrenotazione=p.id;const u=await E(c.idDocumentNegozio);return u&&(c.nomeNegozio=u.nomeNegozio,c.cellulareNegozio=u.cellulareNegozio,c.cittaNegozio=u.cittaNegozio,c.indirizzoNegozio=u.indirizzoNegozio),console.log("Prenotazione caricata: ".concat(c.idDocumentPrenotazione)),console.log("Dettagli prenotazione:",c),c})),console.log("Prenotazioni caricate:",z.value)}catch(n){console.error("Errore durante il recupero delle prenotazioni:",n),v("Errore durante il recupero delle prenotazioni")}finally{g.value=!1,console.log("Recupero delle prenotazioni completato.")}}async function v(n){await(await H.create({message:n,duration:2e3})).present()}return(n,e)=>(D(),y(t(G),null,{default:i(()=>[l(t(Y),null,{default:i(()=>[l(t(A),{color:"primary"},{default:i(()=>[l(t(R),null,{default:i(()=>e[0]||(e[0]=[d("Le tue prenotazioni")])),_:1}),l(t(U),{"is-open":g.value,message:"Attendere prego..."},null,8,["is-open"])]),_:1})]),_:1}),l(t(j),{class:"ion-padding"},{default:i(()=>[(D(!0),K(W,null,Q(z.value,o=>(D(),y(t(ee),{key:o.dataPrenotazione,class:"custom-card"},{default:i(()=>[l(t(oe),null,{default:i(()=>[a("div",de,[l(t(ne),null,{default:i(()=>[d(s(o.nomeNegozio),1)]),_:2},1024),l(t(ae),{class:"trash",icon:t(te),onClick:r=>x(o)},null,8,["icon","onClick"])]),a("p",ue," cell: "+s(o.cellulareNegozio),1),a("p",ze,s(o.indirizzoNegozio)+","+s(o.cittaNegozio),1)]),_:2},1024),l(t(ie),{class:"card-content"},{default:i(()=>[l(t(le),null,{default:i(()=>[d(s(b(o.dataPrenotazione))+", "+s(o.servizioSelezionato),1)]),_:2},1024),a("div",ge,[a("p",null,[e[1]||(e[1]=a("strong",null,"Durata:",-1)),d(" "+s(o.durataServizioSelezionato)+" minuti",1)])]),a("div",me,[a("p",null,[e[2]||(e[2]=a("strong",null,"Ora inizio:",-1)),d(" "+s(o.oraInizio),1)])]),a("div",pe,[a("p",null,[e[3]||(e[3]=a("strong",null,"Ora fine:",-1)),d(" "+s(o.oraFine),1)])]),a("div",fe,[a("p",null,[e[4]||(e[4]=a("strong",null,"Commento:",-1)),d(" "+s(o.commento),1)])])]),_:2},1024)]),_:2},1024))),128)),X(a("p",_e,"Nessuna prenotazione trovata",512),[[Z,T.value]])]),_:1})]),_:1}))}}),we=ce(ve,[["__scopeId","data-v-77c2209b"]]);export{we as default};
